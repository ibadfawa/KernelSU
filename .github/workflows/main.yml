name: Build GKI Android-14 (6.1) Kernel

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"

    steps:
      # 1. Maksimalkan space
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      # 2. Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git curl openjdk-11-jdk python3 zip lz4 bc flex bison build-essential

          # install repo manually
          git clone https://gerrit.googlesource.com/git-repo ~/bin/repo
          sudo ln -sf ~/bin/repo/repo /usr/local/bin/repo

      # 3. Sync kernel source
      - name: Repo sync kernel
        run: |
          mkdir android-kernel && cd android-kernel
          repo init -u https://android.googlesource.com/kernel/manifest -b common-android14-6.1
          repo sync -c -j$(nproc)

      
      - name: Patch SELinux enforcing
        run: |
          echo "[+] Applying SELinux enforcing -> false patch"
          SECURITY_H=$(find . -path "*/security/selinux/include/security.h" | head -n1)
          if [ -f "$SECURITY_H" ]; then
            sed -i \
              -e 's/return[[:space:]]\+READ_ONCE(state->enforcing);/return false;/' \
              -e 's/return[[:space:]]\+true;/return false;/' \
              "$SECURITY_H"
            echo "[+] Patched: $SECURITY_H"
          else
            echo "[!] security.h not found!"
          fi
      # 4. Setup ccache (opsional, supaya build lebih cepat di run berikutnya)
      - name: Setup ccache
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      # 5. Build kernel via Bazel (Kleaf)
      - name: Build GKI kernel
        working-directory: android-kernel
        run: |
          export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
          ./tools/bazel build --config=fast //common:kernel_aarch64

          # optional: build ABI dist
          ./tools/bazel run //common:kernel_aarch64_abi_dist -- --dist_dir=out_abi

      # 6. Upload artifacts
      - name: Upload kernel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gki-android14-6.1
          path: |
            android-kernel/bazel-bin/common/Image.lz4
            
